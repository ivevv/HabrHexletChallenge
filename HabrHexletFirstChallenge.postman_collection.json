{
	"info": {
		"_postman_id": "4b0ae677-2cc3-4e24-a178-ffc22408794d",
		"name": "HabrHexlet First Challenge",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39786729"
	},
	"item": [
		{
			"name": "Valid timestamp param",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid query: no timestamp param",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Body has level\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"level\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid timestamp param: text",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Body has level\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property(\"level\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000jan1st",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000jan1st"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid years param",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Fri Jan 01 2010 00:00:00 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&years=10",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "years",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid years param: text",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Body has level\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"level\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&years=ten",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "years",
							"value": "ten"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid months param",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Sat Jul 01 2000 00:00:00 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&months=6",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "months",
							"value": "6"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid months param: Border Value = 11",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Fri Dec 01 2000 00:00:00 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&months=11",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "months",
							"value": "11"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid months param: BV = 12",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Mon Jan 01 2001 00:00:00 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&months=12",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "months",
							"value": "12"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid months param: BV = 13",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Thu Feb 01 2001 00:00:00 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&months=13",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "months",
							"value": "13"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid months param: text",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Body has level\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"level\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&months=one",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "months",
							"value": "one"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid days param",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Tue Jan 11 2000 00:00:00 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&days=10",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "days",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid days param: text",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Body has level\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"level\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&days=ten",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "days",
							"value": "ten"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid hours param",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Sat Jan 01 2000 12:00:00 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&hours=12",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "hours",
							"value": "12"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid hours param: BV = 23",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Sat Jan 01 2000 23:00:00 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&hours=23",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "hours",
							"value": "23"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid hours param: BV = 24",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Sun Jan 02 2000 00:00:00 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&hours=24",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "hours",
							"value": "24"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid hours param: BV = 25",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Sun Jan 02 2000 01:00:00 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&hours=25",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "hours",
							"value": "25"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid hours param: text",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Body has level\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"level\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&hours=one",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "hours",
							"value": "one"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid minutes param",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Sat Jan 01 2000 00:30:00 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&minutes=30",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "minutes",
							"value": "30"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid minutes param: BV = 59",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Sat Jan 01 2000 00:59:00 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&minutes=59",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "minutes",
							"value": "59"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid minutes param: BV = 60",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Sat Jan 01 2000 01:00:00 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&minutes=60",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "minutes",
							"value": "60"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid minutes param: BV = 61",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Sat Jan 01 2000 01:01:00 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&minutes=61",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "minutes",
							"value": "61"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid minutes param: text",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Body has level\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"level\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&minutes=one",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "minutes",
							"value": "one"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid seconds param",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Sat Jan 01 2000 00:00:30 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&seconds=30",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "seconds",
							"value": "30"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid seconds param: BV = 59",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Sat Jan 01 2000 00:00:59 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&seconds=59",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "seconds",
							"value": "59"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid seconds param: BV = 60",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Sat Jan 01 2000 00:01:00 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&seconds=60",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "seconds",
							"value": "60"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid seconds param: BV = 61",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Sat Jan 01 2000 00:01:01 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&seconds=61",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "seconds",
							"value": "61"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid seconds param: text",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Body has level\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"level\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&seconds=one",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "seconds",
							"value": "one"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid milliseconds param",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Sat Jan 01 2000 00:00:03 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&milliseconds=3000",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "milliseconds",
							"value": "3000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid milliseconds param: BV = 999",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Sat Jan 01 2000 00:00:00 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&milliseconds=999",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "milliseconds",
							"value": "999"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid milliseconds param: BV = 1000",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Sat Jan 01 2000 00:00:01 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&milliseconds=1000",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "milliseconds",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Valid milliseconds param: BV = 1001",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has sum\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"sum\");\r",
							"});\r",
							"pm.test(\"Sum is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(\"Sat Jan 01 2000 00:00:01 GMT+0000\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&milliseconds=1001",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "milliseconds",
							"value": "1001"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid milliseconds param: text",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Body has level\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"level\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2000-01-01&milliseconds=one",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2000-01-01"
						},
						{
							"key": "milliseconds",
							"value": "one"
						}
					]
				}
			},
			"response": []
		}
	]
}